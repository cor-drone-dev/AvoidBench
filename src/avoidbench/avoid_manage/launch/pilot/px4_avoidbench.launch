<?xml version="1.0"?>

<launch>
  <arg name="drone_name" default="hovergames"/>

  <arg name="quad_name" default="nxp_drone"/>
  <arg name="use_unity_editor" default="false" />
  <arg name="enable_benchmark" default="false" />

  <arg name="sim" default="true"/>
  <arg name="run_px4_control_interface" default="true"/>
  <arg name="px4_control_interface_param_file" default="$(find px4_tools)/config/px4_control_interface_lmpcc.yaml"/>
  <arg name="gazebo_gui" default="true"/>

  <!-- Launch AvoidManage node for AvoidBench -->
  <node pkg="avoid_manage" type="avoid_manage_node" name="avoid_manage_node" output="screen">
    <rosparam file="$(find avoid_manage)/params/task_indoor.yaml" />
    <param name="drone_name" value="$(arg drone_name)" />
    <remap from="flight_pilot/state_estimate" to="px4_sitl_odom" />
    <param name="quad_name" value="$(arg quad_name)" if="$(arg enable_benchmark)"/>
  </node>
  
  <!-- Launch unity scene for AvoidBench -->
  <node pkg="unity_scene" type="AvoidBench.x86_64" name="avoidbench_render" unless="$(arg use_unity_editor)">
  </node>

<!-- Load robot_description and publish the states on tf -->
  <include file="$(find drone_description)/launch/drone_description.launch">
    <arg name="drone_name" value="$(arg drone_name)"/>
  </include>

<!-- Launch Gazebo if sim is set to true -->
  <group if="$(arg sim)">
    <include file="$(find drone_gazebo)/launch/gazebo_world.launch">
      <arg name="gui" value="$(arg gazebo_gui)"/>
    </include>
  </group>

<!-- Launch PX4 control interface, MAVROS, PX4 SITL and spawn vehicle -->
  <include file="$(find px4_tools)/launch/px4_tools.launch">
    <arg name="sim" value="$(arg sim)"/>
    <arg name="drone_name" value="$(arg drone_name)"/>
    <arg name="run_px4_control_interface" value="$(arg run_px4_control_interface)"/>
    <arg name="px4_control_interface_param_file" value="$(arg px4_control_interface_param_file)"/>
  </include>

<!-- Launch LMPCC motion planner -->
  <include file="$(find drone_toolbox_ext_control_template)/launch/controller.launch"/>

<!-- Launch ROS dynamic reconfigure -->
  <node name="rqt_reconfig" pkg="rqt_reconfigure" type="rqt_reconfigure"/>

<!-- Record a ROS bag -->
  <node pkg="rosbag" name="record" type="record" args="-o template_controller
  /mavros/setpoint_raw/local
  /mavros/setpoint_raw/attitude
  /mavros/setpoint_raw/roll_pitch_yawrate_thrust
  /mavros/local_position/odom"
  />
</launch>
